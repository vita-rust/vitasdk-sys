/* automatically generated by rust-bindgen 0.68.1 */

#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::psp2kern::types::*;

pub mod SceDsiErrorCode {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_DSI_ERROR_INVALID_HEAD: Type = 2151613952;
    pub const SCE_DSI_ERROR_INVALID_STATE: Type = 2151613953;
    pub const SCE_DSI_ERROR_INVALID_PARAM: Type = 2151613954;
    pub const SCE_DSI_ERROR_HEAD_NOT_ENABLED: Type = 2151613955;
}
pub mod SceDsiHead {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_DSI_HEAD_OLED_LCD: Type = 0;
    pub const SCE_DSI_HEAD_HDMI: Type = 1;
}
extern "C" {
    pub fn ksceDsiEnableHead(head: crate::ctypes::c_int) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceDsiDisableHead(head: crate::ctypes::c_int) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceDsiSendBlankingPacket(head: crate::ctypes::c_int) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceDsiSetLanesAndPixelSize(
        head: crate::ctypes::c_int,
        lanes: crate::ctypes::c_int,
        pixelsize: crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceDsiSetVic(
        head: crate::ctypes::c_int,
        vic: crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceDsiGetVicResolution(
        vic: crate::ctypes::c_int,
        width: *mut crate::ctypes::c_int,
        height: *mut crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceDsiGetPixelClock(head: crate::ctypes::c_int) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceDsiGenericShortWrite(
        head: crate::ctypes::c_int,
        param0: crate::ctypes::c_int,
        param1: crate::ctypes::c_int,
        param2: crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceDsiGenericReadRequest(
        head: crate::ctypes::c_int,
        param: crate::ctypes::c_int,
        buff: *mut crate::ctypes::c_void,
        size: crate::ctypes::c_uint,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceDsiDcsShortWrite(
        head: crate::ctypes::c_int,
        param0: crate::ctypes::c_ushort,
        param1: crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceDsiDcsRead(
        head: crate::ctypes::c_int,
        param: crate::ctypes::c_ushort,
        buff: *mut crate::ctypes::c_void,
        size: crate::ctypes::c_uint,
    ) -> crate::ctypes::c_int;
}

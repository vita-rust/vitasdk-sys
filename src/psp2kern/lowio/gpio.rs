/* automatically generated by rust-bindgen 0.68.1 */

#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::psp2kern::types::*;

pub mod SceGpioErrorCode {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_GPIO_ERROR_INVALID_BUS: Type = 2151612672;
    pub const SCE_GPIO_ERROR_INVALID_PORT: Type = 2151612673;
    pub const SCE_GPIO_ERROR_INVALID_MODE: Type = 2151612674;
}
pub mod SceGpioPortMasks {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_GPIO_PORT_MASK_LED_GAMECARD: Type = 64;
    pub const SCE_GPIO_PORT_MASK_LED_PS_BUTTON: Type = 128;
}
pub mod SceGpioPortMode {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_GPIO_PORT_MODE_OUTPUT: Type = 0;
    pub const SCE_GPIO_PORT_MODE_INPUT: Type = 1;
}
extern "C" {
    pub fn ksceGpioPortRead(
        bus: crate::ctypes::c_int,
        port: crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceGpioPortSet(
        bus: crate::ctypes::c_int,
        port: crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceGpioPortClear(
        bus: crate::ctypes::c_int,
        port: crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceGpioPortReset(
        bus: crate::ctypes::c_int,
        port: crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceGpioSetPortMode(
        bus: crate::ctypes::c_int,
        port: crate::ctypes::c_int,
        mode: crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceGpioGetPortMode(
        bus: crate::ctypes::c_int,
        port: crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceGpioSetIntrMode(
        bus: crate::ctypes::c_int,
        port: crate::ctypes::c_int,
        intr_mode: crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceGpioGetIntrMode(
        bus: crate::ctypes::c_int,
        port: crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceGpioAcquireIntr(
        bus: crate::ctypes::c_int,
        port: crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceGpioQueryIntr(
        bus: crate::ctypes::c_int,
        port: crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}

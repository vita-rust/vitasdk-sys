/* automatically generated by rust-bindgen 0.68.1 */

#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::psp2kern::coredump::*;
#[allow(unused_imports)]
use crate::psp2kern::kernel::cpu::*;
#[allow(unused_imports)]
use crate::psp2kern::kernel::kbl::kbl::*;
#[allow(unused_imports)]
use crate::psp2kern::types::*;
#[allow(unused_imports)]
use crate::vitasdk::build_utils::*;

pub const SCE_SYSROOT_INIT_CALLBACK_MAX_FUNC: u32 = 9;
pub const SCE_SYSROOT_INIT_CALLBACK_MAX_SLOT: u32 = 8;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceKernelBootArgs {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceClass {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceSysrootModulemgrHandlers {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceSysrootForKernel_D29BCA77_struct {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceSysrootForDriver_733C243E_struct {
    _unused: [u8; 0],
}
#[repr(C)]
pub struct SceUIDSysrootObject {
    pub object: *mut crate::ctypes::c_void,
    pub sce_class: *mut SceClass,
    pub size: SceSize,
    pub magic1: SceUInt32,
    pub cpu_intr: crate::ctypes::c_int,
    pub boot_alloc_memory_size: SceSize,
    pub boot_alloc_memory: *mut crate::ctypes::c_void,
    pub unk_0x1C: crate::ctypes::c_int,
    pub unk_0x20: *mut crate::ctypes::c_void,
    pub boot_flags: SceUInt32,
    pub status: SceUInt32,
    pub corelock_context: SceCorelockContext,
    pub unk_0x34: crate::ctypes::c_int,
    pub unk_0x38: crate::ctypes::c_int,
    pub unk_0x3C: *mut crate::ctypes::c_void,
    pub unk_0x40: *mut crate::ctypes::c_void,
    pub unk_0x44: *mut crate::ctypes::c_void,
    pub unk_0x48: *mut crate::ctypes::c_void,
    pub unk_0x4C: *mut crate::ctypes::c_void,
    pub unk_0x50: *mut crate::ctypes::c_void,
    pub unk_0x54: crate::ctypes::c_int,
    pub unk_0x58: *mut crate::ctypes::c_void,
    pub unk_0x5C: crate::ctypes::c_int,
    pub unk_0x60: crate::ctypes::c_int,
    pub unk_0x64: crate::ctypes::c_int,
    pub unk_0x68: crate::ctypes::c_int,
    pub kbl_param: *mut SceKblParam,
    pub boot_args: *mut SceKernelBootArgs,
    pub soc_revision: SceUInt32,
    pub unk_0x78: SceUInt32,
    pub soc_revision2: SceUInt32,
    pub model_info: SceUInt32,
    pub model_capability: SceUInt32,
    pub longtime5base: *mut crate::ctypes::c_void,
    pub cpu_intr_for_init_callback: crate::ctypes::c_int,
    pub init_callback_registable_base_number: SceUInt32,
    pub init_callback_slot: [[SceUIDSysrootObject__bindgen_ty_1; 8usize]; 9usize],
    pub funcThreadMgrStartAfterProcess:
        ::core::option::Option<unsafe extern "C" fn() -> crate::ctypes::c_int>,
    pub funcIofilemgrStart: ::core::option::Option<unsafe extern "C" fn() -> crate::ctypes::c_int>,
    pub unk_0x2DC: *mut crate::ctypes::c_void,
    pub unk_0x2E0: *mut crate::ctypes::c_void,
    pub sysroot_names: [*mut crate::ctypes::c_char; 9usize],
    pub this_object_uid: SceUID,
    pub unk_0x30C: *mut crate::ctypes::c_void,
    pub unk_0x310: *mut crate::ctypes::c_void,
    pub unk_0x314: *mut crate::ctypes::c_void,
    pub VBAR: *mut crate::ctypes::c_void,
    pub MVBAR: *mut crate::ctypes::c_void,
    pub unk_0x320: *mut crate::ctypes::c_void,
    pub unk_func_0x324: *mut *mut crate::ctypes::c_void,
    pub funcGetThreadId: ::core::option::Option<unsafe extern "C" fn() -> SceUID>,
    pub funcThreadFunction3: ::core::option::Option<unsafe extern "C" fn() -> crate::ctypes::c_int>,
    pub funcGetProcessId: ::core::option::Option<unsafe extern "C" fn() -> SceUID>,
    pub funcThreadFunction4: ::core::option::Option<unsafe extern "C" fn() -> crate::ctypes::c_int>,
    pub funcThreadFunction5: ::core::option::Option<unsafe extern "C" fn() -> crate::ctypes::c_int>,
    pub funcThreadFunction6: ::core::option::Option<unsafe extern "C" fn() -> crate::ctypes::c_int>,
    pub funcThreadFunction7: ::core::option::Option<unsafe extern "C" fn()>,
    pub funcThreadFunction8: ::core::option::Option<unsafe extern "C" fn() -> crate::ctypes::c_int>,
    pub funcThreadFunction9: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
        ) -> crate::ctypes::c_int,
    >,
    pub funcThreadFunction10: ::core::option::Option<
        unsafe extern "C" fn(a1: crate::ctypes::c_int) -> crate::ctypes::c_int,
    >,
    pub modulemgr_handlers: *mut SceSysrootModulemgrHandlers,
    pub unk_0x354: crate::ctypes::c_int,
    pub processmgr_callbacks1: *mut SceSysrootForKernel_D29BCA77_struct,
    pub processmgr_callbacks2: *mut SceSysrootForDriver_733C243E_struct,
    pub unk_func_0x360: *mut crate::ctypes::c_void,
    pub funcGetBusError: ::core::option::Option<
        unsafe extern "C" fn(dst: *mut crate::ctypes::c_void, len: u32) -> crate::ctypes::c_int,
    >,
    pub funcAppMgrFunction1: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
            a4: crate::ctypes::c_int,
            a5: crate::ctypes::c_int,
            a6: crate::ctypes::c_int,
        ) -> crate::ctypes::c_int,
    >,
    pub funcGetShellPid: ::core::option::Option<unsafe extern "C" fn() -> SceUID>,
    pub unk_func_0x370: *mut crate::ctypes::c_void,
    pub unk_func_0x374: *mut crate::ctypes::c_void,
    pub unk_func_0x378: *mut crate::ctypes::c_void,
    pub unk_0x37C: crate::ctypes::c_int,
    pub unk_func_0x380: *mut crate::ctypes::c_void,
    pub unk_func_0x384: ::core::option::Option<unsafe extern "C" fn() -> crate::ctypes::c_int>,
    pub unk_func_0x388: ::core::option::Option<unsafe extern "C" fn() -> crate::ctypes::c_int>,
    pub unk_func_0x38C: *mut crate::ctypes::c_void,
    pub unk_func_0x390: *mut crate::ctypes::c_void,
    pub funcHasNpTestFlag: ::core::option::Option<unsafe extern "C" fn() -> crate::ctypes::c_int>,
    pub unk_func_0x398: *mut crate::ctypes::c_void,
    pub funcLedSetMode: ::core::option::Option<
        unsafe extern "C" fn(
            led: crate::ctypes::c_int,
            mode: crate::ctypes::c_int,
            led_configuration: *mut crate::ctypes::c_void,
        ) -> crate::ctypes::c_int,
    >,
    pub cached_sm_info_ranges: *mut SceKernelVARange,
    pub funcGetFunctionNameByNID: ::core::option::Option<
        unsafe extern "C" fn(
            funcnid: SceNID,
            name: *mut *const crate::ctypes::c_char,
        ) -> crate::ctypes::c_int,
    >,
    pub unk_0x3A8: *mut crate::ctypes::c_void,
    pub unk_0x3AC: *mut crate::ctypes::c_void,
    pub unk_struct_0x3B0: *mut crate::ctypes::c_void,
    pub unk_0x3B4: *mut crate::ctypes::c_void,
    pub unk_0x3B8: *mut crate::ctypes::c_void,
    pub unk_0x3BC: *mut crate::ctypes::c_void,
    pub unk_0x3C0: *mut crate::ctypes::c_void,
    pub process_handler: *mut SceSysrootProcessHandler,
    pub dbgp_handler: *mut SceSysrootDbgpHandler,
    pub unk_func_0x3CC: *mut crate::ctypes::c_void,
    pub unk_func_0x3D0: *mut crate::ctypes::c_void,
    pub unk_func_0x3D4: *mut crate::ctypes::c_void,
    pub unk_func_0x3D8: *mut crate::ctypes::c_void,
    pub unk_func_0x3DC: *mut crate::ctypes::c_void,
    pub unk_func_0x3E0: *mut crate::ctypes::c_void,
    pub funcAppMgrFunction3: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
        ) -> crate::ctypes::c_int,
    >,
    pub funcAppMgrFunction4: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
        ) -> crate::ctypes::c_int,
    >,
    pub funcAppMgrFunction5: ::core::option::Option<
        unsafe extern "C" fn(a1: crate::ctypes::c_int) -> crate::ctypes::c_int,
    >,
    pub unk_func_0x3F0: *mut crate::ctypes::c_void,
    pub unk_struct_0x3F4: *mut crate::ctypes::c_void,
    pub unk_struct_0x3F8: *mut crate::ctypes::c_void,
    pub unk_struct_0x3FC: *mut crate::ctypes::c_void,
    pub unk_data_0x400: *mut crate::ctypes::c_void,
    pub unk_func_0x404: *mut crate::ctypes::c_void,
    pub unk_func_0x408: *mut crate::ctypes::c_void,
    pub unk_func_0x40C: *mut crate::ctypes::c_void,
    pub unk_func_0x410: *mut crate::ctypes::c_void,
    pub unk_func_0x414: *mut crate::ctypes::c_void,
    pub magic2: SceUInt32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceUIDSysrootObject__bindgen_ty_1 {
    pub callback: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            args: *mut crate::ctypes::c_void,
        ) -> crate::ctypes::c_int,
    >,
    pub args: *mut crate::ctypes::c_void,
}
pub type SceSysroot = SceUIDSysrootObject;
pub mod SceKernelSysrootSelfIndex {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_KERNEL_SYSROOT_SELF_INDEX_GCAUTHMGR_SM: Type = 0;
    pub const SCE_KERNEL_SYSROOT_SELF_INDEX_RMAUTH_SM: Type = 1;
    pub const SCE_KERNEL_SYSROOT_SELF_INDEX_ENCDEC_W_PORTABILITY_SM: Type = 2;
}
#[repr(C)]
pub struct SceKernelSysrootSelfInfo {
    pub size: SceSize,
    pub self_data: *mut crate::ctypes::c_void,
    pub self_size: SceSize,
}
extern "C" {
    pub fn ksceSysrootGetSysroot() -> *mut SceSysroot;
}
extern "C" {
    pub fn ksceKernelSysrootSetSysroot(sysroot_uid: SceUID);
}
extern "C" {
    pub fn ksceKernelSysrootGetKblParam() -> *mut crate::ctypes::c_void;
}
extern "C" {
    pub fn ksceKernelSysrootGetProcessTitleId(
        pid: SceUID,
        titleid: *mut crate::ctypes::c_char,
        len: SceSize,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSysrootGetSelfInfo(
        index: SceKernelSysrootSelfIndex::Type,
        info: *mut SceKernelSysrootSelfInfo,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSysrootUseExternalStorage() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSysrootUseInternalStorage() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSysrootIsManufacturingMode() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSysrootIsNonRemovableCardMode() -> crate::ctypes::c_int;
}
#[repr(C)]
pub struct SceSysrootProcessHandler {
    pub size: SceSize,
    pub unk_4: ::core::option::Option<
        unsafe extern "C" fn(pid: SceUID, modid: SceUID, flags: crate::ctypes::c_int, time: u64),
    >,
    pub exit: ::core::option::Option<
        unsafe extern "C" fn(pid: SceUID, flags: crate::ctypes::c_int, time: u64),
    >,
    pub kill: ::core::option::Option<unsafe extern "C" fn(pid: SceUID)>,
    pub unk_10: ::core::option::Option<unsafe extern "C" fn(pid: SceUID, modid: SceUID, time: u64)>,
    pub unk_14: ::core::option::Option<unsafe extern "C" fn(pid: SceUID, modid: SceUID, time: u64)>,
    pub unk_18: ::core::option::Option<unsafe extern "C" fn(pid: SceUID, modid: SceUID, time: u64)>,
    pub on_process_created: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
        ) -> crate::ctypes::c_int,
    >,
    pub unk_20: ::core::option::Option<unsafe extern "C" fn(pid: SceUID, modid: SceUID, time: u64)>,
    pub unk_24: ::core::option::Option<
        unsafe extern "C" fn(pid: SceUID, modid: SceUID, flags: crate::ctypes::c_int, time: u64),
    >,
}
extern "C" {
    pub fn ksceKernelSysrootSetProcessHandler(
        handlers: *const SceSysrootProcessHandler,
    ) -> crate::ctypes::c_int;
}
#[repr(C)]
pub struct SceSysrootDbgpHandler {
    pub size: SceSize,
    pub unk_0x04: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
            a4: crate::ctypes::c_int,
        ),
    >,
    pub unk_0x08: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
            a4: crate::ctypes::c_int,
        ),
    >,
    pub unk_0x0C: ::core::option::Option<unsafe extern "C" fn(a1: crate::ctypes::c_int)>,
    pub unk_0x10: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
            a4: crate::ctypes::c_int,
        ),
    >,
    pub unk_0x14: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
            a4: crate::ctypes::c_int,
        ),
    >,
    pub unk_0x18: ::core::option::Option<
        unsafe extern "C" fn(pid: SceUID, modid: SceUID, flags: crate::ctypes::c_int, time: u64),
    >,
    pub unk_0x1C: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
        ),
    >,
    pub unk_0x20: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
        ),
    >,
    pub unk_0x24: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
        ),
    >,
    pub unk_0x28:
        ::core::option::Option<unsafe extern "C" fn(pid: SceUID, modid: SceUID, time: u64)>,
    pub unk_0x2C:
        ::core::option::Option<unsafe extern "C" fn(pid: SceUID, modid: SceUID, time: u64)>,
    pub unk_0x30: ::core::option::Option<unsafe extern "C" fn(pid: SceUID) -> crate::ctypes::c_int>,
    pub unk_0x34: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
        ) -> crate::ctypes::c_int,
    >,
    pub unk_0x38: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: *mut crate::ctypes::c_void,
        ) -> crate::ctypes::c_int,
    >,
    pub unk_0x3C: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
        ) -> crate::ctypes::c_int,
    >,
    pub unk_0x40: ::core::option::Option<
        unsafe extern "C" fn(
            pid: SceUID,
            some_flag: *mut crate::ctypes::c_int,
        ) -> crate::ctypes::c_int,
    >,
    pub unk_0x44: ::core::option::Option<
        unsafe extern "C" fn(
            pid: SceUID,
            modid: SceUID,
            flags: crate::ctypes::c_int,
            time: u64,
        ) -> crate::ctypes::c_int,
    >,
    pub unk_0x48: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
        ) -> crate::ctypes::c_int,
    >,
    pub unk_0x4C: ::core::option::Option<unsafe extern "C" fn()>,
    pub unk_0x50: ::core::option::Option<unsafe extern "C" fn()>,
    pub unk_0x54: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
            a4: crate::ctypes::c_int,
            a5: crate::ctypes::c_int,
        ) -> crate::ctypes::c_int,
    >,
    pub unk_0x58: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
        ) -> crate::ctypes::c_int,
    >,
}
extern "C" {
    pub fn ksceKernelSysrootRegisterDbgpHandler(
        handlers: *const SceSysrootDbgpHandler,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceKernelSysrootUnregisterDbgpHandler();
}
extern "C" {
    pub fn ksceSysrootGetHardwareFlags(flags: *mut crate::ctypes::c_void) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSysrootIsBsodReboot() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSysrootIsSafeMode() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSysrootIsUpdateMode() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSysrootIsUsbEnumWakeup() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSysrootIsExternalBootMode() -> crate::ctypes::c_int;
}
pub type SceKernelGetSystemSwVersionFunc =
    ::core::option::Option<unsafe extern "C" fn() -> crate::ctypes::c_int>;
extern "C" {
    pub fn ksceKernelSysrootSetGetSystemSwVersionFunc(func: SceKernelGetSystemSwVersionFunc);
}
extern "C" {
    pub fn ksceKernelSysrootGetSystemSwVersion() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceKernelSysrootGetShellPid() -> SceUID;
}
pub type SceKernelCoredumpTriggerFunc = ::core::option::Option<
    unsafe extern "C" fn(
        pid: SceUID,
        update_func: SceKernelCoredumpStateUpdateCallback,
        finish_func: SceKernelCoredumpStateFinishCallback,
        param: *mut SceCoredumpTriggerParam,
    ) -> crate::ctypes::c_int,
>;
extern "C" {
    pub fn ksceKernelSysrootRegisterCoredumpTrigger(func: SceKernelCoredumpTriggerFunc);
}

/* automatically generated by rust-bindgen 0.68.1 */

#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::psp2kern::types::*;

pub type va_list = u32;
pub type SceSysclibPrntCallback = ::core::option::Option<
    unsafe extern "C" fn(argp: *mut crate::ctypes::c_void, ch: crate::ctypes::c_int),
>;
pub mod SceCTypeFlag {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_CTYPE_NONE: Type = 0;
    pub const SCE_CTYPE_UPPERCASE: Type = 1;
    pub const SCE_CTYPE_LOWERCASE: Type = 2;
    pub const SCE_CTYPE_NUMBER: Type = 4;
    pub const SCE_CTYPE_CONTROL: Type = 8;
    pub const SCE_CTYPE_SYMBOL: Type = 16;
    pub const SCE_CTYPE_INVISIBLE: Type = 32;
    pub const SCE_CTYPE_HEX_CASE: Type = 64;
}
extern "C" {
    pub fn memset(
        dst: *mut crate::ctypes::c_void,
        ch: crate::ctypes::c_int,
        len: crate::ctypes::c_uint,
    ) -> *mut crate::ctypes::c_void;
}
extern "C" {
    pub fn memcpy(
        dst: *mut crate::ctypes::c_void,
        src: *const crate::ctypes::c_void,
        len: crate::ctypes::c_uint,
    ) -> *mut crate::ctypes::c_void;
}
extern "C" {
    pub fn memmove(
        dst: *mut crate::ctypes::c_void,
        src: *const crate::ctypes::c_void,
        len: crate::ctypes::c_uint,
    ) -> *mut crate::ctypes::c_void;
}
extern "C" {
    pub fn memcmp(
        s1: *const crate::ctypes::c_void,
        s2: *const crate::ctypes::c_void,
        len: crate::ctypes::c_uint,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn memchr(
        src: *const crate::ctypes::c_void,
        ch: crate::ctypes::c_int,
        n: crate::ctypes::c_uint,
    ) -> *mut crate::ctypes::c_void;
}
extern "C" {
    pub fn strcmp(
        s1: *const crate::ctypes::c_char,
        s2: *const crate::ctypes::c_char,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn strncmp(
        s1: *const crate::ctypes::c_char,
        s2: *const crate::ctypes::c_char,
        n: crate::ctypes::c_uint,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn strchr(
        src: *const crate::ctypes::c_char,
        ch: crate::ctypes::c_int,
    ) -> *mut crate::ctypes::c_char;
}
extern "C" {
    pub fn strstr(
        s1: *const crate::ctypes::c_char,
        s2: *const crate::ctypes::c_char,
    ) -> *mut crate::ctypes::c_char;
}
extern "C" {
    pub fn strlen(s: *const crate::ctypes::c_char) -> crate::ctypes::c_uint;
}
extern "C" {
    pub fn strnlen(
        s: *const crate::ctypes::c_char,
        n: crate::ctypes::c_uint,
    ) -> crate::ctypes::c_uint;
}
extern "C" {
    pub fn strncpy(
        dst: *mut crate::ctypes::c_char,
        src: *const crate::ctypes::c_char,
        n: crate::ctypes::c_uint,
    ) -> *mut crate::ctypes::c_char;
}
extern "C" {
    pub fn snprintf(
        dst: *mut crate::ctypes::c_char,
        max: crate::ctypes::c_uint,
        fmt: *const crate::ctypes::c_char,
        ...
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vsnprintf(
        dst: *mut crate::ctypes::c_char,
        max: crate::ctypes::c_uint,
        fmt: *const crate::ctypes::c_char,
        arg: u32,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn look_ctype_table(ch: crate::ctypes::c_char) -> crate::ctypes::c_char;
}
extern "C" {
    pub fn tolower(ch: crate::ctypes::c_int) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn toupper(ch: crate::ctypes::c_int) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn timingsafe_memcmp(
        s1: *const crate::ctypes::c_void,
        s2: *const crate::ctypes::c_void,
        n: usize,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn strtol(
        str_: *const crate::ctypes::c_char,
        endptr: *mut *mut crate::ctypes::c_char,
        base: crate::ctypes::c_int,
    ) -> crate::ctypes::c_long;
}
extern "C" {
    pub fn strtoll(
        str_: *const crate::ctypes::c_char,
        endptr: *mut *mut crate::ctypes::c_char,
        base: crate::ctypes::c_int,
    ) -> crate::ctypes::c_longlong;
}
extern "C" {
    pub fn strtoul(
        str_: *const crate::ctypes::c_char,
        endptr: *mut *mut crate::ctypes::c_char,
        base: crate::ctypes::c_int,
    ) -> crate::ctypes::c_ulong;
}
extern "C" {
    pub fn __memcpy_chk(
        dst: *mut crate::ctypes::c_void,
        src: *const crate::ctypes::c_void,
        len: crate::ctypes::c_uint,
        dst_len: crate::ctypes::c_uint,
    ) -> *mut crate::ctypes::c_void;
}
extern "C" {
    pub fn __memset_chk(
        dst: *mut crate::ctypes::c_void,
        ch: crate::ctypes::c_int,
        len: crate::ctypes::c_uint,
        dst_len: crate::ctypes::c_uint,
    ) -> *mut crate::ctypes::c_void;
}
extern "C" {
    pub fn __memmove_chk(
        dst: *mut crate::ctypes::c_void,
        src: *const crate::ctypes::c_void,
        len: crate::ctypes::c_uint,
        dst_len: crate::ctypes::c_uint,
    ) -> *mut crate::ctypes::c_void;
}
extern "C" {
    pub fn __strncpy_chk(
        dst: *mut crate::ctypes::c_char,
        src: *const crate::ctypes::c_char,
        n: crate::ctypes::c_uint,
        dst_len: crate::ctypes::c_uint,
    ) -> *mut crate::ctypes::c_char;
}
extern "C" {
    pub fn __prnt(
        callback: SceSysclibPrntCallback,
        argp: *mut crate::ctypes::c_void,
        fmt: *const crate::ctypes::c_char,
        list: va_list,
    );
}
extern "C" {
    pub fn __stack_chk_fail() -> !;
}

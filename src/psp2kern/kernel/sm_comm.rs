/* automatically generated by rust-bindgen 0.68.1 */

#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::psp2kern::types::*;
#[allow(unused_imports)]
use crate::vitasdk::build_utils::*;

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceSblSmCommPair {
    pub data_00: crate::ctypes::c_int,
    pub data_04: crate::ctypes::c_int,
}
pub type SceSblSmCommId = crate::ctypes::c_int;
extern "C" {
    pub fn ksceSblSmCommStartSmFromFile(
        priority: SceUInt32,
        sm_path: *const crate::ctypes::c_char,
        cmd_id: SceUInt32,
        auth_info: *mut SceAuthInfo,
        id: *mut SceSblSmCommId,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSblSmCommCallFunc(
        id: SceSblSmCommId,
        service_id: SceUInt32,
        service_result: *mut SceUInt32,
        data: *mut crate::ctypes::c_void,
        size: SceSize,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSblSmCommStopSm(
        id: SceSblSmCommId,
        result: *mut SceSblSmCommPair,
    ) -> crate::ctypes::c_int;
}

/* automatically generated by rust-bindgen 0.68.1 */

#[allow(unused_imports)]
use crate::psp2common::kernel::threadmgr::*;
#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::psp2kern::types::*;
#[allow(unused_imports)]
use crate::vitasdk::build_utils::*;

#[repr(C)]
pub struct SceKernelFastMutex {
    pub data: [SceUInt8; 64usize],
}
extern "C" {
    pub fn ksceKernelInitializeFastMutex(
        fast_mutex: *mut SceKernelFastMutex,
        name: *const crate::ctypes::c_char,
        attr: crate::ctypes::c_int,
        opt: *mut crate::ctypes::c_void,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceKernelFinalizeFastMutex(fast_mutex: *mut SceKernelFastMutex)
        -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceKernelLockFastMutex(fast_mutex: *mut SceKernelFastMutex) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceKernelTryLockFastMutex(fast_mutex: *mut SceKernelFastMutex) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceKernelUnlockFastMutex(fast_mutex: *mut SceKernelFastMutex) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceKernelGetFastMutexInfo(
        fast_mutex: *mut SceKernelFastMutex,
        info: *mut crate::ctypes::c_void,
    ) -> crate::ctypes::c_int;
}

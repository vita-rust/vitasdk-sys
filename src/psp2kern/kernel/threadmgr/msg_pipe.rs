/* automatically generated by rust-bindgen 0.68.1 */

#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::psp2kern::types::*;
#[allow(unused_imports)]
use crate::vitasdk::build_utils::*;

#[repr(C)]
pub struct SceKernelMsgPipeInfo {
    pub size: SceSize,
    pub msgpipe_id: SceUID,
    pub name: [crate::ctypes::c_char; 32usize],
    pub attr: crate::ctypes::c_int,
    pub buffer_size: SceSize,
    pub free_size: SceSize,
    pub num_send_wait_threads: crate::ctypes::c_int,
    pub num_receive_wait_threads: crate::ctypes::c_int,
}
extern "C" {
    pub fn ksceKernelGetMsgPipeInfo(
        msgpipe_id: SceUID,
        info: *mut SceKernelMsgPipeInfo,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceKernelCreateMsgPipe(
        name: *const crate::ctypes::c_char,
        type_: crate::ctypes::c_int,
        attr: crate::ctypes::c_int,
        bufSize: SceSize,
        opt: *mut crate::ctypes::c_void,
    ) -> SceUID;
}
extern "C" {
    pub fn ksceKernelDeleteMsgPipe(uid: SceUID) -> crate::ctypes::c_int;
}
#[repr(C)]
pub struct MsgPipeSendData {
    pub message: *const crate::ctypes::c_void,
    pub size: SceSize,
}
extern "C" {
    pub fn ksceKernelSendMsgPipeVector(
        uid: SceUID,
        v: *const MsgPipeSendData,
        n: crate::ctypes::c_uint,
        unk1: crate::ctypes::c_int,
        unk2: *mut crate::ctypes::c_void,
        timeout: *mut crate::ctypes::c_uint,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceKernelTrySendMsgPipeVector(
        uid: SceUID,
        v: *const MsgPipeSendData,
        size: SceSize,
        unk1: crate::ctypes::c_int,
        unk2: *mut crate::ctypes::c_void,
    ) -> crate::ctypes::c_int;
}
#[repr(C)]
pub struct MsgPipeRecvData {
    pub message: *mut crate::ctypes::c_void,
    pub size: SceSize,
}
extern "C" {
    pub fn ksceKernelReceiveMsgPipeVector(
        uid: SceUID,
        v: *const MsgPipeRecvData,
        n: crate::ctypes::c_uint,
        unk1: crate::ctypes::c_int,
        unk2: *mut crate::ctypes::c_void,
        timeout: *mut crate::ctypes::c_uint,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceKernelTryReceiveMsgPipeVector(
        uid: SceUID,
        v: *const MsgPipeRecvData,
        size: SceSize,
        unk1: crate::ctypes::c_int,
        unk2: *mut crate::ctypes::c_void,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceKernelCancelMsgPipe(
        uid: SceUID,
        psend: *mut crate::ctypes::c_int,
        precv: *mut crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}

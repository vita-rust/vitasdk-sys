/* automatically generated by rust-bindgen 0.68.1 */

#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::psp2kern::types::*;
#[allow(unused_imports)]
use crate::vitasdk::build_utils::*;

#[repr(C)]
pub struct SceKernelCondOptParam {
    pub size: SceSize,
}
#[repr(C)]
pub struct SceKernelCondInfo {
    pub size: SceSize,
    pub condId: SceUID,
    pub name: [crate::ctypes::c_char; 32usize],
    pub attr: SceUInt,
    pub mutexId: SceUID,
    pub numWaitThreads: crate::ctypes::c_int,
}
extern "C" {
    pub fn ksceKernelCreateCond(
        name: *const crate::ctypes::c_char,
        attr: SceUInt,
        mutexId: SceUID,
        option: *const SceKernelCondOptParam,
    ) -> SceUID;
}
extern "C" {
    pub fn ksceKernelDeleteCond(condId: SceUID) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceKernelWaitCond(
        condId: SceUID,
        timeout: *mut crate::ctypes::c_uint,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceKernelSignalCond(condId: SceUID) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceKernelSignalCondAll(condId: SceUID) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceKernelSignalCondTo(condId: SceUID, threadId: SceUID) -> crate::ctypes::c_int;
}

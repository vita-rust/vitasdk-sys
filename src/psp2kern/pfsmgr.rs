/* automatically generated by rust-bindgen 0.68.1 */

#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::psp2kern::types::*;
#[allow(unused_imports)]
use crate::vitasdk::build_utils::*;

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ScePfsRndDriveId {
    pub drive_id: [crate::ctypes::c_char; 16usize],
}
extern "C" {
    pub fn kscePfsMount(
        path: *const crate::ctypes::c_char,
        rnd_drive_id: *const ScePfsRndDriveId,
        program_authority_id: SceUInt64,
        klicensee: *const crate::ctypes::c_void,
        mode_index: u16,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn kscePfsMount2(
        path: *const crate::ctypes::c_char,
        rnd_drive_id: *const ScePfsRndDriveId,
        klicensee: *const crate::ctypes::c_void,
        mode_index: u16,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn kscePfsUnmount(rnd_drive_id: *const ScePfsRndDriveId) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn kscePfsApprove(
        rnd_drive_id: *const ScePfsRndDriveId,
        program_authority_id: SceUInt64,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn kscePfsDisapprove(
        rnd_drive_id: *const ScePfsRndDriveId,
        program_authority_id: SceUInt64,
    ) -> crate::ctypes::c_int;
}

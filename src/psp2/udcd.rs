/* automatically generated by rust-bindgen 0.68.1 */

#[allow(unused_imports)]
use crate::psp2::types::*;
#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::psp2common::udcd::*;
#[allow(unused_imports)]
use crate::vitasdk::build_utils::*;

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceUdcdDeviceState {
    pub unk_00: crate::ctypes::c_int,
    pub state: crate::ctypes::c_int,
    pub cable: crate::ctypes::c_int,
    pub connection: crate::ctypes::c_int,
    pub use_usb_charging: crate::ctypes::c_int,
    pub unk_14: crate::ctypes::c_int,
}
extern "C" {
    pub fn sceUdcdGetDeviceState(state: *mut SceUdcdDeviceState) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceUdcdGetDeviceInfo(devInfo: *mut SceUdcdDeviceInfo) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceUdcdGetDrvState(driverName: *const crate::ctypes::c_char) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceUdcdRegisterCallback(
        cbid: SceUID,
        state: crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceUdcdUnregisterCallback(cbid: SceUID) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceUdcdWaitState(
        waitParam: *mut SceUdcdWaitParam,
        timeout: crate::ctypes::c_uint,
    ) -> crate::ctypes::c_int;
}

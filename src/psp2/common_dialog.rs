/* automatically generated by rust-bindgen 0.65.1 */

#[allow(unused_imports)]
use crate::psp2::gxm::*;
#[allow(unused_imports)]
use crate::psp2::kernel::clib::*;
#[allow(unused_imports)]
use crate::psp2::system_param::*;
#[allow(unused_imports)]
use crate::psp2::types::*;
#[allow(unused_imports)]
use crate::psp2common::defs::*;
#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::vitasdk::build_utils::*;

pub const SCE_COMMON_DIALOG_MAGIC_NUMBER: u32 = 3234963721;
pub mod SceCommonDialogErrorCode {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_COMMON_DIALOG_ERROR_BUSY: Type = 2147615745;
    pub const SCE_COMMON_DIALOG_ERROR_NULL: Type = 2147615746;
    pub const SCE_COMMON_DIALOG_ERROR_INVALID_ARGUMENT: Type = 2147615747;
    pub const SCE_COMMON_DIALOG_ERROR_NOT_RUNNING: Type = 2147615748;
    pub const SCE_COMMON_DIALOG_ERROR_NOT_SUPPORTED: Type = 2147615749;
    pub const SCE_COMMON_DIALOG_ERROR_ILLEGAL_CALLER_THREAD: Type = 2147615750;
    pub const SCE_COMMON_DIALOG_ERROR_NOT_CONFIGURED: Type = 2147615751;
    pub const SCE_COMMON_DIALOG_ERROR_NOT_AVAILABLE: Type = 2147615752;
    pub const SCE_COMMON_DIALOG_ERROR_NOT_FINISHED: Type = 2147615760;
    pub const SCE_COMMON_DIALOG_ERROR_NOT_IN_USE: Type = 2147615761;
    pub const SCE_COMMON_DIALOG_ERROR_INVALID_COLOR_FORMAT: Type = 2147615776;
    pub const SCE_COMMON_DIALOG_ERROR_INVALID_SURFACE_RESOLUTION: Type = 2147615777;
    pub const SCE_COMMON_DIALOG_ERROR_INVALID_SURFACE_STRIDE: Type = 2147615778;
    pub const SCE_COMMON_DIALOG_ERROR_INVALID_SURFACE_TYPE: Type = 2147615779;
    pub const SCE_COMMON_DIALOG_ERROR_WITHIN_SCENE: Type = 2147615780;
    pub const SCE_COMMON_DIALOG_ERROR_IME_IN_USE: Type = 2147615792;
    pub const SCE_COMMON_DIALOG_ERROR_INVALID_LANGUAGE: Type = 2147615793;
    pub const SCE_COMMON_DIALOG_ERROR_INVALID_ENTER_BUTTON_ASSIGN: Type = 2147615794;
    pub const SCE_COMMON_DIALOG_ERROR_INVALID_INFOBAR_PARAM: Type = 2147615795;
    pub const SCE_COMMON_DIALOG_ERROR_INVALID_BG_COLOR: Type = 2147615796;
    pub const SCE_COMMON_DIALOG_ERROR_INVALID_DIMMER_COLOR: Type = 2147615797;
    pub const SCE_COMMON_DIALOG_ERROR_GXM_IS_UNINITIALIZED: Type = 2147615798;
    pub const SCE_COMMON_DIALOG_ERROR_UNEXPECTED_FATAL: Type = 2147615871;
}
#[repr(C)]
pub struct SceCommonDialogConfigParam {
    pub sdkVersion: SceUInt32,
    pub language: SceSystemParamLang::Type,
    pub enterButtonAssign: SceSystemParamEnterButtonAssign::Type,
    pub reserved: [SceUInt8; 32usize],
}
pub mod SceCommonDialogStatus {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_COMMON_DIALOG_STATUS_NONE: Type = 0;
    pub const SCE_COMMON_DIALOG_STATUS_RUNNING: Type = 1;
    pub const SCE_COMMON_DIALOG_STATUS_FINISHED: Type = 2;
}
pub mod SceCommonDialogResult {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_COMMON_DIALOG_RESULT_OK: Type = 0;
    pub const SCE_COMMON_DIALOG_RESULT_USER_CANCELED: Type = 1;
    pub const SCE_COMMON_DIALOG_RESULT_ABORTED: Type = 2;
}
#[repr(C)]
pub struct SceCommonDialogRenderTargetInfo {
    pub depthSurfaceData: ScePVoid,
    pub colorSurfaceData: ScePVoid,
    pub surfaceType: SceGxmColorSurfaceType::Type,
    pub colorFormat: SceGxmColorFormat::Type,
    pub width: SceUInt32,
    pub height: SceUInt32,
    pub strideInPixels: SceUInt32,
    pub reserved: [SceUInt8; 32usize],
}
#[repr(C)]
pub struct SceCommonDialogUpdateParam {
    pub renderTarget: SceCommonDialogRenderTargetInfo,
    pub displaySyncObject: *mut SceGxmSyncObject,
    pub reserved: [SceUInt8; 32usize],
}
#[repr(C)]
pub struct SceCommonDialogInfobarParam {
    pub visibility: SceInt32,
    pub color: SceInt32,
    pub transparency: SceInt32,
    pub reserved: [SceUInt8; 32usize],
}
#[repr(C)]
pub struct SceCommonDialogColor {
    pub r: SceUInt8,
    pub g: SceUInt8,
    pub b: SceUInt8,
    pub a: SceUInt8,
}
pub type SceCommonDialogBgColor = SceCommonDialogColor;
#[repr(C)]
pub struct SceCommonDialogParam {
    pub infobarParam: *mut SceCommonDialogInfobarParam,
    pub bgColor: *mut SceCommonDialogColor,
    pub dimmerColor: *mut SceCommonDialogColor,
    pub reserved: [SceUInt8; 60usize],
    pub magic: SceUInt32,
}
extern "C" {
    pub fn sceCommonDialogSetConfigParam(
        configParam: *const SceCommonDialogConfigParam,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceCommonDialogUpdate(
        updateParam: *const SceCommonDialogUpdateParam,
    ) -> crate::ctypes::c_int;
}

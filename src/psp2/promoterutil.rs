/* automatically generated by rust-bindgen 0.68.1 */

#[allow(unused_imports)]
use crate::psp2::types::*;
#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::vitasdk::build_utils::*;

pub mod ScePromoterUtilityPackageType {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_PKG_TYPE_VITA: Type = 1;
    pub const SCE_PKG_TYPE_PSP: Type = 1;
    pub const SCE_PKG_TYPE_PSM: Type = 3;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ScePromoterUtilityLAUpdate {
    pub titleid: [crate::ctypes::c_char; 12usize],
    pub path: [crate::ctypes::c_char; 128usize],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ScePromoterUtilityImportParams {
    pub path: [crate::ctypes::c_char; 128usize],
    pub titleid: [crate::ctypes::c_char; 12usize],
    pub type_: ScePromoterUtilityPackageType::Type,
    pub attribute: u32,
    pub reserved: [crate::ctypes::c_char; 28usize],
}
extern "C" {
    pub fn scePromoterUtilityInit() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn scePromoterUtilityExit() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn scePromoterUtilityDeletePkg(
        titleid: *const crate::ctypes::c_char,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn scePromoterUtilityUpdateLiveArea(
        args: *mut ScePromoterUtilityLAUpdate,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn scePromoterUtilityPromoteImport(
        params: *mut ScePromoterUtilityImportParams,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn scePromoterUtilityPromotePkg(
        path: *const crate::ctypes::c_char,
        sync: crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn scePromoterUtilityPromotePkgWithRif(
        path: *const crate::ctypes::c_char,
        sync: crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn scePromoterUtilityGetState(state: *mut crate::ctypes::c_int) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn scePromoterUtilityGetResult(res: *mut crate::ctypes::c_int) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn scePromoterUtilityCheckExist(
        titleid: *const crate::ctypes::c_char,
        res: *mut crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}

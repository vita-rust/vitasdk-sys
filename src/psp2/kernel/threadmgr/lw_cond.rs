/* automatically generated by rust-bindgen 0.68.1 */

#[allow(unused_imports)]
use crate::psp2::kernel::threadmgr::lw_mutex::*;
#[allow(unused_imports)]
use crate::psp2::types::*;
#[allow(unused_imports)]
use crate::psp2common::kernel::threadmgr::*;
#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::vitasdk::build_utils::*;

extern "C" {
    pub fn sceKernelCreateLwCond(
        pWork: *mut SceKernelLwCondWork,
        pName: *const crate::ctypes::c_char,
        attr: crate::ctypes::c_uint,
        pLwMutex: *mut SceKernelLwMutexWork,
        pOptParam: *const SceKernelLwCondOptParam,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceKernelDeleteLwCond(pWork: *mut SceKernelLwCondWork) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceKernelSignalLwCond(pWork: *mut SceKernelLwCondWork) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceKernelSignalLwCondAll(pWork: *mut SceKernelLwCondWork) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceKernelSignalLwCondTo(
        pWork: *mut SceKernelLwCondWork,
        threadId: SceUID,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceKernelWaitLwCond(
        pWork: *mut SceKernelLwCondWork,
        pTimeout: *mut crate::ctypes::c_uint,
    ) -> crate::ctypes::c_int;
}

/* automatically generated by rust-bindgen 0.68.1 */

#[allow(unused_imports)]
use crate::psp2::types::*;
#[allow(unused_imports)]
use crate::psp2common::kernel::threadmgr::*;
#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::vitasdk::build_utils::*;

extern "C" {
    pub fn sceKernelCreateCond(
        name: *const crate::ctypes::c_char,
        attr: SceUInt,
        mutexId: SceUID,
        option: *const SceKernelCondOptParam,
    ) -> SceUID;
}
extern "C" {
    pub fn sceKernelDeleteCond(condId: SceUID) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceKernelOpenCond(name: *const crate::ctypes::c_char) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceKernelCloseCond(condId: SceUID) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceKernelWaitCond(
        condId: SceUID,
        timeout: *mut crate::ctypes::c_uint,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceKernelWaitCondCB(
        condId: SceUID,
        timeout: *mut crate::ctypes::c_uint,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceKernelSignalCond(condId: SceUID) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceKernelSignalCondAll(condId: SceUID) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceKernelSignalCondTo(condId: SceUID, threadId: SceUID) -> crate::ctypes::c_int;
}

/* automatically generated by rust-bindgen 0.68.1 */

#[allow(unused_imports)]
use crate::psp2::types::*;
#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::vitasdk::build_utils::*;

extern "C" {
    pub fn sceKernelCreateMsgPipe(
        name: *const crate::ctypes::c_char,
        type_: crate::ctypes::c_int,
        attr: crate::ctypes::c_int,
        bufSize: crate::ctypes::c_uint,
        opt: *mut crate::ctypes::c_void,
    ) -> SceUID;
}
extern "C" {
    pub fn sceKernelDeleteMsgPipe(uid: SceUID) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceKernelSendMsgPipe(
        uid: SceUID,
        message: *mut crate::ctypes::c_void,
        size: crate::ctypes::c_uint,
        unk1: crate::ctypes::c_int,
        unk2: *mut crate::ctypes::c_void,
        timeout: *mut crate::ctypes::c_uint,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceKernelSendMsgPipeCB(
        uid: SceUID,
        message: *mut crate::ctypes::c_void,
        size: crate::ctypes::c_uint,
        unk1: crate::ctypes::c_int,
        unk2: *mut crate::ctypes::c_void,
        timeout: *mut crate::ctypes::c_uint,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceKernelTrySendMsgPipe(
        uid: SceUID,
        message: *mut crate::ctypes::c_void,
        size: SceSize,
        unk1: crate::ctypes::c_int,
        unk2: *mut crate::ctypes::c_void,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceKernelReceiveMsgPipe(
        uid: SceUID,
        message: *mut crate::ctypes::c_void,
        size: SceSize,
        unk1: crate::ctypes::c_int,
        unk2: *mut crate::ctypes::c_void,
        timeout: *mut crate::ctypes::c_uint,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceKernelReceiveMsgPipeCB(
        uid: SceUID,
        message: *mut crate::ctypes::c_void,
        size: SceSize,
        unk1: crate::ctypes::c_int,
        unk2: *mut crate::ctypes::c_void,
        timeout: *mut crate::ctypes::c_uint,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceKernelTryReceiveMsgPipe(
        uid: SceUID,
        message: *mut crate::ctypes::c_void,
        size: SceSize,
        unk1: crate::ctypes::c_int,
        unk2: *mut crate::ctypes::c_void,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceKernelCancelMsgPipe(
        uid: SceUID,
        psend: *mut crate::ctypes::c_int,
        precv: *mut crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
#[repr(C)]
pub struct SceKernelMppInfo {
    pub size: SceSize,
    pub mppId: SceUID,
    pub name: [crate::ctypes::c_char; 32usize],
    pub attr: SceUInt,
    pub bufSize: crate::ctypes::c_int,
    pub freeSize: crate::ctypes::c_int,
    pub numSendWaitThreads: crate::ctypes::c_int,
    pub numReceiveWaitThreads: crate::ctypes::c_int,
}
extern "C" {
    pub fn sceKernelGetMsgPipeInfo(
        uid: SceUID,
        info: *mut SceKernelMppInfo,
    ) -> crate::ctypes::c_int;
}

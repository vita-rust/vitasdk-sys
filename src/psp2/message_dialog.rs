/* automatically generated by rust-bindgen 0.68.1 */

#[allow(unused_imports)]
use crate::psp2::common_dialog::*;
#[allow(unused_imports)]
use crate::psp2::kernel::clib::*;
#[allow(unused_imports)]
use crate::psp2::types::*;
#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::vitasdk::build_utils::*;

pub const SCE_MSG_DIALOG_USER_MSG_SIZE: u32 = 512;
pub mod SceMsgDialogErrorCode {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_MSG_DIALOG_ERROR_PARAM: Type = 2148534785;
}
pub mod SceMsgDialogMode {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_MSG_DIALOG_MODE_INVALID: Type = 0;
    pub const SCE_MSG_DIALOG_MODE_USER_MSG: Type = 1;
    pub const SCE_MSG_DIALOG_MODE_SYSTEM_MSG: Type = 2;
    pub const SCE_MSG_DIALOG_MODE_ERROR_CODE: Type = 3;
    pub const SCE_MSG_DIALOG_MODE_PROGRESS_BAR: Type = 4;
}
pub mod SceMsgDialogSystemMessageType {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_MSG_DIALOG_SYSMSG_TYPE_INVALID: Type = 0;
    pub const SCE_MSG_DIALOG_SYSMSG_TYPE_WAIT: Type = 1;
    pub const SCE_MSG_DIALOG_SYSMSG_TYPE_NOSPACE: Type = 2;
    pub const SCE_MSG_DIALOG_SYSMSG_TYPE_MAGNETIC_CALIBRATION: Type = 3;
    pub const SCE_MSG_DIALOG_SYSMSG_TYPE_WAIT_SMALL: Type = 5;
    pub const SCE_MSG_DIALOG_SYSMSG_TYPE_WAIT_CANCEL: Type = 6;
    pub const SCE_MSG_DIALOG_SYSMSG_TYPE_NEED_MC_CONTINUE: Type = 7;
    pub const SCE_MSG_DIALOG_SYSMSG_TYPE_NEED_MC_OPERATION: Type = 8;
    pub const SCE_MSG_DIALOG_SYSMSG_TYPE_TRC_MIC_DISABLED: Type = 100;
    pub const SCE_MSG_DIALOG_SYSMSG_TYPE_TRC_WIFI_REQUIRED_OPERATION: Type = 101;
    pub const SCE_MSG_DIALOG_SYSMSG_TYPE_TRC_WIFI_REQUIRED_APPLICATION: Type = 102;
    pub const SCE_MSG_DIALOG_SYSMSG_TYPE_TRC_EMPTY_STORE: Type = 103;
}
pub mod SceMsgDialogButtonType {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_MSG_DIALOG_BUTTON_TYPE_OK: Type = 0;
    pub const SCE_MSG_DIALOG_BUTTON_TYPE_YESNO: Type = 1;
    pub const SCE_MSG_DIALOG_BUTTON_TYPE_NONE: Type = 2;
    pub const SCE_MSG_DIALOG_BUTTON_TYPE_OK_CANCEL: Type = 3;
    pub const SCE_MSG_DIALOG_BUTTON_TYPE_CANCEL: Type = 4;
    pub const SCE_MSG_DIALOG_BUTTON_TYPE_3BUTTONS: Type = 5;
}
pub mod SceMsgDialogButtonId {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_MSG_DIALOG_BUTTON_ID_INVALID: Type = 0;
    pub const SCE_MSG_DIALOG_BUTTON_ID_OK: Type = 1;
    pub const SCE_MSG_DIALOG_BUTTON_ID_YES: Type = 1;
    pub const SCE_MSG_DIALOG_BUTTON_ID_NO: Type = 2;
    pub const SCE_MSG_DIALOG_BUTTON_ID_RETRY: Type = 3;
    pub const SCE_MSG_DIALOG_BUTTON_ID_BUTTON1: Type = 1;
    pub const SCE_MSG_DIALOG_BUTTON_ID_BUTTON2: Type = 2;
    pub const SCE_MSG_DIALOG_BUTTON_ID_BUTTON3: Type = 3;
}
pub mod SceMsgDialogProgressBarType {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_MSG_DIALOG_PROGRESSBAR_TYPE_PERCENTAGE: Type = 0;
}
pub mod SceMsgDialogProgressBarTarget {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_MSG_DIALOG_PROGRESSBAR_TARGET_BAR_DEFAULT: Type = 0;
}
pub mod SceMsgDialogEnvFlag {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_MSG_DIALOG_ENV_FLAG_DEFAULT: Type = 0;
}
pub mod SceMsgDialogFontSize {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_MSG_DIALOG_FONT_SIZE_DEFAULT: Type = 0;
    pub const SCE_MSG_DIALOG_FONT_SIZE_SMALL: Type = 1;
}
#[repr(C)]
pub struct SceMsgDialogButtonsParam {
    pub msg1: *const crate::ctypes::c_char,
    pub fontSize1: SceInt32,
    pub msg2: *const crate::ctypes::c_char,
    pub fontSize2: SceInt32,
    pub msg3: *const crate::ctypes::c_char,
    pub fontSize3: SceInt32,
    pub reserved: [SceChar8; 32usize],
}
#[repr(C)]
pub struct SceMsgDialogUserMessageParam {
    pub buttonType: SceInt32,
    pub msg: *const SceChar8,
    pub buttonParam: *mut SceMsgDialogButtonsParam,
    pub reserved: [SceChar8; 28usize],
}
#[repr(C)]
pub struct SceMsgDialogSystemMessageParam {
    pub sysMsgType: SceInt32,
    pub value: SceInt32,
    pub reserved: [SceChar8; 32usize],
}
#[repr(C)]
pub struct SceMsgDialogErrorCodeParam {
    pub errorCode: SceInt32,
    pub reserved: [SceChar8; 32usize],
}
#[repr(C)]
pub struct SceMsgDialogProgressBarParam {
    pub barType: SceInt32,
    pub sysMsgParam: SceMsgDialogSystemMessageParam,
    pub msg: *const SceChar8,
    pub reserved: [SceInt32; 8usize],
}
#[repr(C)]
pub struct SceMsgDialogParam {
    pub sdkVersion: SceUInt32,
    pub commonParam: SceCommonDialogParam,
    pub mode: SceInt32,
    pub userMsgParam: *mut SceMsgDialogUserMessageParam,
    pub sysMsgParam: *mut SceMsgDialogSystemMessageParam,
    pub errorCodeParam: *mut SceMsgDialogErrorCodeParam,
    pub progBarParam: *mut SceMsgDialogProgressBarParam,
    pub flag: SceInt32,
    pub reserved: [SceChar8; 32usize],
}
#[repr(C)]
pub struct SceMsgDialogResult {
    pub mode: SceInt32,
    pub result: SceInt32,
    pub buttonId: SceInt32,
    pub reserved: [SceChar8; 32usize],
}
extern "C" {
    pub fn sceMsgDialogInit(param: *const SceMsgDialogParam) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceMsgDialogGetStatus() -> SceCommonDialogStatus::Type;
}
extern "C" {
    pub fn sceMsgDialogAbort() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceMsgDialogGetResult(result: *mut SceMsgDialogResult) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceMsgDialogTerm() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceMsgDialogClose() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceMsgDialogProgressBarInc(
        target: SceMsgDialogProgressBarTarget::Type,
        delta: SceUInt32,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceMsgDialogProgressBarSetValue(
        target: SceMsgDialogProgressBarTarget::Type,
        rate: SceUInt32,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceMsgDialogProgressBarSetMsg(
        target: SceMsgDialogProgressBarTarget::Type,
        barMsg: *const SceChar8,
    ) -> crate::ctypes::c_int;
}

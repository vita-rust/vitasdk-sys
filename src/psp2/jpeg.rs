/* automatically generated by rust-bindgen 0.68.1 */

#[allow(unused_imports)]
use crate::psp2::types::*;
#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::vitasdk::build_utils::*;

#[repr(C)]
pub struct SceJpegMJpegInitParam {
    pub size: SceSize,
    pub decoderCount: SceInt32,
    pub options: SceInt32,
}
#[repr(C)]
pub struct SceJpegPitch {
    pub x: SceUInt32,
    pub y: SceUInt32,
}
#[repr(C)]
pub struct SceJpegOutputInfo {
    pub colorSpace: SceInt32,
    pub width: SceUInt16,
    pub height: SceUInt16,
    pub outputSize: SceUInt32,
    pub unk_0xc: SceUInt32,
    pub unk_0x10: SceUInt32,
    pub pitch: [SceJpegPitch; 4usize],
}
extern "C" {
    pub fn sceJpegInitMJpeg(decoderCount: SceInt32) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceJpegInitMJpegWithParam(params: *const SceJpegMJpegInitParam) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceJpegFinishMJpeg() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceJpegGetOutputInfo(
        jpegData: *const SceUInt8,
        jpegSize: SceSize,
        format: SceInt32,
        mode: SceInt32,
        output: *mut SceJpegOutputInfo,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceJpegDecodeMJpegYCbCr(
        jpegData: *const SceUInt8,
        jpegSize: SceSize,
        mode: SceInt32,
        output: *mut SceUInt8,
        outputSize: SceSize,
        buffer: *mut crate::ctypes::c_void,
        bufferSize: SceSize,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceJpegMJpegCsc(
        rgba: *mut SceUInt8,
        yuv: *const SceUInt8,
        yuvSize: SceSize,
        imageWidth: SceInt32,
        format: SceInt32,
        sampling: SceInt32,
    ) -> crate::ctypes::c_int;
}

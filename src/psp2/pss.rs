/* automatically generated by rust-bindgen 0.65.1 */

#[allow(unused_imports)]
use crate::psp2::types::*;
#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::vitasdk::build_utils::*;

#[repr(C)]
pub struct ScePssCryptoHandle {
    pub fd: SceUID,
    pub unk1: u32,
    pub size: SceSize,
    pub unk3: u32,
}
extern "C" {
    pub fn pss_crypto_open(
        handle: *mut ScePssCryptoHandle,
        path: *mut crate::ctypes::c_char,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn pss_crypto_read(
        handle: *mut ScePssCryptoHandle,
        mode: *mut crate::ctypes::c_int,
    ) -> *mut crate::ctypes::c_char;
}
extern "C" {
    pub fn pss_crypto_close(handle: *mut ScePssCryptoHandle) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn pss_code_mem_alloc(arg1: *mut SceSize) -> *mut crate::ctypes::c_void;
}
extern "C" {
    pub fn pss_code_mem_flush_icache(arg1: *const crate::ctypes::c_void, arg2: SceSize);
}
extern "C" {
    pub fn pss_code_mem_lock();
}
extern "C" {
    pub fn pss_code_mem_unlock();
}

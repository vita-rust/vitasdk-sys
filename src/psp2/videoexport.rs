/* automatically generated by rust-bindgen 0.65.1 */

#[allow(unused_imports)]
use crate::psp2::types::*;
#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::vitasdk::build_utils::*;

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct VideoExportInputParam {
    pub path: [crate::ctypes::c_char; 1024usize],
    pub reserved: [crate::ctypes::c_char; 64usize],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct VideoExportOutputParam {
    pub path: [crate::ctypes::c_char; 1024usize],
    pub reserved: [crate::ctypes::c_char; 8usize],
}
extern "C" {
    pub fn sceVideoExportFromFile(
        in_param: *const VideoExportInputParam,
        unk: crate::ctypes::c_int,
        workingMemory: *mut crate::ctypes::c_void,
        cancelCb: *mut crate::ctypes::c_void,
        progress: ::core::option::Option<
            unsafe extern "C" fn(arg1: *mut crate::ctypes::c_void, arg2: crate::ctypes::c_int),
        >,
        user: *mut crate::ctypes::c_void,
        unk2: crate::ctypes::c_int,
        out_param: *mut VideoExportOutputParam,
    ) -> crate::ctypes::c_int;
}

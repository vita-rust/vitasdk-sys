/* automatically generated by rust-bindgen 0.65.1 */

#[allow(unused_imports)]
use crate::psp2::types::*;
#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::vitasdk::build_utils::*;

pub type SceAvPlayerHandle = crate::ctypes::c_int;
pub mod SceAvPlayerErrorCode {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_AVPLAYER_ERROR_INVALID_PARAM: Type = 2154430465;
    pub const SCE_AVPLAYER_ERROR_OUT_OF_MEMORY: Type = 2154430467;
}
pub mod SceAvPlayerTrickSpeeds {
    pub type Type = crate::ctypes::c_int;
    pub const SCE_AVPLAYER_TRICK_SPEED_REWIND_32X: Type = -3200;
    pub const SCE_AVPLAYER_TRICK_SPEED_REWIND_16X: Type = -1600;
    pub const SCE_AVPLAYER_TRICK_SPEED_REWIND_8X: Type = -800;
    pub const SCE_AVPLAYER_TRICK_SPEED_NORMAL: Type = 100;
    pub const SCE_AVPLAYER_TRICK_SPEED_FAST_FORWARD_2X: Type = 200;
    pub const SCE_AVPLAYER_TRICK_SPEED_FAST_FORWARD_4X: Type = 400;
    pub const SCE_AVPLAYER_TRICK_SPEED_FAST_FORWARD_8X: Type = 800;
    pub const SCE_AVPLAYER_TRICK_SPEED_FAST_FORWARD_16X: Type = 1600;
    pub const SCE_AVPLAYER_TRICK_SPEED_FAST_FORWARD_32X: Type = 3200;
}
pub mod SceAvPlayerStreamType {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_AVPLAYER_VIDEO: Type = 0;
    pub const SCE_AVPLAYER_AUDIO: Type = 1;
    pub const SCE_AVPLAYER_TIMEDTEXT: Type = 2;
}
pub type SceAvPlayerAlloc = ::core::option::Option<
    unsafe extern "C" fn(
        arg: *mut crate::ctypes::c_void,
        alignment: u32,
        size: u32,
    ) -> *mut crate::ctypes::c_void,
>;
pub type SceAvPlayerFree = ::core::option::Option<
    unsafe extern "C" fn(arg: *mut crate::ctypes::c_void, ptr: *mut crate::ctypes::c_void),
>;
pub type SceAvPlayerAllocFrame = ::core::option::Option<
    unsafe extern "C" fn(
        arg: *mut crate::ctypes::c_void,
        alignment: u32,
        size: u32,
    ) -> *mut crate::ctypes::c_void,
>;
pub type SceAvPlayerFreeFrame = ::core::option::Option<
    unsafe extern "C" fn(arg: *mut crate::ctypes::c_void, ptr: *mut crate::ctypes::c_void),
>;
pub type SceAvPlayerOpenFile = ::core::option::Option<
    unsafe extern "C" fn(
        p: *mut crate::ctypes::c_void,
        filename: *const crate::ctypes::c_char,
    ) -> crate::ctypes::c_int,
>;
pub type SceAvPlayerCloseFile = ::core::option::Option<
    unsafe extern "C" fn(p: *mut crate::ctypes::c_void) -> crate::ctypes::c_int,
>;
pub type SceAvPlayerReadOffsetFile = ::core::option::Option<
    unsafe extern "C" fn(
        p: *mut crate::ctypes::c_void,
        buffer: *mut u8,
        position: u64,
        length: u32,
    ) -> crate::ctypes::c_int,
>;
pub type SceAvPlayerSizeFile =
    ::core::option::Option<unsafe extern "C" fn(p: *mut crate::ctypes::c_void) -> u64>;
pub type SceAvPlayerEventCallback = ::core::option::Option<
    unsafe extern "C" fn(
        p: *mut crate::ctypes::c_void,
        argEventId: i32,
        argSourceId: i32,
        argEventData: *mut crate::ctypes::c_void,
    ),
>;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceAvPlayerMemReplacement {
    pub objectPointer: *mut crate::ctypes::c_void,
    pub allocate: SceAvPlayerAlloc,
    pub deallocate: SceAvPlayerFree,
    pub allocateTexture: SceAvPlayerAllocFrame,
    pub deallocateTexture: SceAvPlayerFreeFrame,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceAvPlayerFileReplacement {
    pub objectPointer: *mut crate::ctypes::c_void,
    pub open: SceAvPlayerOpenFile,
    pub close: SceAvPlayerCloseFile,
    pub readOffset: SceAvPlayerReadOffsetFile,
    pub size: SceAvPlayerSizeFile,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceAvPlayerEventReplacement {
    pub objectPointer: *mut crate::ctypes::c_void,
    pub eventCallback: SceAvPlayerEventCallback,
}
#[repr(C)]
pub struct SceAvPlayerInitData {
    pub memoryReplacement: SceAvPlayerMemReplacement,
    pub fileReplacement: SceAvPlayerFileReplacement,
    pub eventReplacement: SceAvPlayerEventReplacement,
    pub debugLevel: i32,
    pub basePriority: u32,
    pub numOutputVideoFrameBuffers: i32,
    pub autoStart: SceBool,
    pub reserved: [u8; 3usize],
    pub defaultLanguage: *const crate::ctypes::c_char,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceAvPlayerAudio {
    pub channelCount: u16,
    pub reserved: [u8; 2usize],
    pub sampleRate: u32,
    pub size: u32,
    pub languageCode: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceAvPlayerVideo {
    pub width: u32,
    pub height: u32,
    pub aspectRatio: f32,
    pub languageCode: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceAvPlayerTextPosition {
    pub top: u16,
    pub left: u16,
    pub bottom: u16,
    pub right: u16,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceAvPlayerTimedText {
    pub languageCode: u32,
    pub textSize: u16,
    pub fontSize: u16,
    pub position: SceAvPlayerTextPosition,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union SceAvPlayerStreamDetails {
    pub reserved: [u32; 4usize],
    pub audio: SceAvPlayerAudio,
    pub video: SceAvPlayerVideo,
    pub subs: SceAvPlayerTimedText,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct SceAvPlayerFrameInfo {
    pub pData: *mut u8,
    pub reserved: u32,
    pub timeStamp: u64,
    pub details: SceAvPlayerStreamDetails,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct SceAvPlayerStreamInfo {
    pub type_: u32,
    pub reserved: u32,
    pub details: SceAvPlayerStreamDetails,
    pub duration: u64,
    pub startTime: u64,
}
extern "C" {
    pub fn sceAvPlayerInit(data: *mut SceAvPlayerInitData) -> SceAvPlayerHandle;
}
extern "C" {
    pub fn sceAvPlayerPause(handle: SceAvPlayerHandle) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceAvPlayerResume(handle: SceAvPlayerHandle) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceAvPlayerStart(handle: SceAvPlayerHandle) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceAvPlayerStop(handle: SceAvPlayerHandle) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceAvPlayerSetLooping(
        handle: SceAvPlayerHandle,
        looping: SceBool,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceAvPlayerIsActive(handle: SceAvPlayerHandle) -> SceBool;
}
extern "C" {
    pub fn sceAvPlayerAddSource(
        handle: SceAvPlayerHandle,
        filename: *const crate::ctypes::c_char,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceAvPlayerClose(handle: SceAvPlayerHandle) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceAvPlayerGetAudioData(
        handle: SceAvPlayerHandle,
        info: *mut SceAvPlayerFrameInfo,
    ) -> SceBool;
}
extern "C" {
    pub fn sceAvPlayerGetVideoData(
        handle: SceAvPlayerHandle,
        info: *mut SceAvPlayerFrameInfo,
    ) -> SceBool;
}
extern "C" {
    pub fn sceAvPlayerCurrentTime(handle: SceAvPlayerHandle) -> u64;
}
extern "C" {
    pub fn sceAvPlayerJumpToTime(handle: SceAvPlayerHandle, offset: u64) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceAvPlayerSetTrickSpeed(
        handle: SceAvPlayerHandle,
        speed: crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceAvPlayerGetStreamInfo(
        handle: SceAvPlayerHandle,
        id: u32,
        info: *mut SceAvPlayerStreamInfo,
    ) -> crate::ctypes::c_int;
}

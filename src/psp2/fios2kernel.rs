/* automatically generated by rust-bindgen 0.68.1 */

#[allow(unused_imports)]
use crate::psp2::types::*;
#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::vitasdk::build_utils::*;

pub type SceFiosKernelOverlayDH = i32;
pub type SceFiosKernelOverlayID = i32;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceFiosKernelOverlay {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceFiosNativeStat {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceFiosNativeDirEntry {
    _unused: [u8; 0],
}
extern "C" {
    pub fn _sceFiosKernelOverlayAdd(
        overlay: *const SceFiosKernelOverlay,
        out_id: *mut SceFiosKernelOverlayID,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _sceFiosKernelOverlayAddForProcess(
        target_process: SceUID,
        overlay: *const SceFiosKernelOverlay,
        out_id: *mut SceFiosKernelOverlayID,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _sceFiosKernelOverlayDHChstatSync(
        dh: SceFiosKernelOverlayDH,
        new_stat: *const SceFiosNativeStat,
        cbit: crate::ctypes::c_uint,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _sceFiosKernelOverlayDHCloseSync(dh: SceFiosKernelOverlayDH) -> crate::ctypes::c_int;
}
#[repr(C)]
pub struct SceFiosDHOpenSyncSyscallArgs {
    pub to_order: SceUInt8,
    pub padding: [crate::ctypes::c_int; 2usize],
}
extern "C" {
    pub fn _sceFiosKernelOverlayDHOpenSync(
        out_dh: *mut SceFiosKernelOverlayDH,
        path: *const crate::ctypes::c_char,
        from_order: SceUInt8,
        args: *mut SceFiosDHOpenSyncSyscallArgs,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _sceFiosKernelOverlayDHReadSync(
        dh: SceFiosKernelOverlayDH,
        out_entry: *mut SceFiosNativeDirEntry,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _sceFiosKernelOverlayDHStatSync(
        dh: SceFiosKernelOverlayDH,
        out_stat: *mut SceFiosNativeStat,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _sceFiosKernelOverlayDHSyncSync(
        dh: SceFiosKernelOverlayDH,
        flag: crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _sceFiosKernelOverlayGetInfo(
        id: SceFiosKernelOverlayID,
        out_overlay: *mut SceFiosKernelOverlay,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _sceFiosKernelOverlayGetInfoForProcess(
        target_process: SceUID,
        id: SceFiosKernelOverlayID,
        out_overlay: *mut SceFiosKernelOverlay,
    ) -> crate::ctypes::c_int;
}
#[repr(C)]
pub struct SceFiosGetListSyscallArgs {
    pub out_ids: *mut SceFiosKernelOverlayID,
    pub data_0x04: crate::ctypes::c_int,
    pub data_0x08: crate::ctypes::c_int,
    pub data_0x0C: SceSize,
    pub data_0x10: crate::ctypes::c_int,
    pub data_0x14: crate::ctypes::c_int,
}
extern "C" {
    pub fn _sceFiosKernelOverlayGetList(
        pid: SceUID,
        min_order: SceUInt8,
        max_order: SceUInt8,
        args: *mut SceFiosGetListSyscallArgs,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _sceFiosKernelOverlayGetRecommendedScheduler(
        avail: crate::ctypes::c_int,
        partially_resolved_path: *const crate::ctypes::c_char,
        a3: *mut SceUInt64,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _sceFiosKernelOverlayModify(
        id: SceFiosKernelOverlayID,
        new_value: *const SceFiosKernelOverlay,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _sceFiosKernelOverlayModifyForProcess(
        target_process: SceUID,
        id: SceFiosKernelOverlayID,
        new_value: *const SceFiosKernelOverlay,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _sceFiosKernelOverlayRemove(id: SceFiosKernelOverlayID) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _sceFiosKernelOverlayRemoveForProcess(
        target_process: SceUID,
        id: SceFiosKernelOverlayID,
    ) -> crate::ctypes::c_int;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceFiosResolveSyncSyscallArgs {
    pub out_path: *mut crate::ctypes::c_char,
    pub data_0x04: crate::ctypes::c_int,
    pub data_0x08: crate::ctypes::c_int,
    pub data_0x0C: crate::ctypes::c_int,
    pub data_0x10: crate::ctypes::c_int,
    pub data_0x14: crate::ctypes::c_int,
}
extern "C" {
    pub fn _sceFiosKernelOverlayResolveSync(
        pid: SceUID,
        resolve_flag: crate::ctypes::c_int,
        in_path: *const crate::ctypes::c_char,
        args: *mut SceFiosResolveSyncSyscallArgs,
    ) -> crate::ctypes::c_int;
}
#[repr(C)]
pub struct SceFiosResolveWithRangeSyncSyscallArgs {
    pub out_path: *mut crate::ctypes::c_char,
    pub data_0x04: crate::ctypes::c_int,
    pub data_0x08: SceUInt8,
    pub data_0x09: SceUInt8,
    pub data_0x0C: crate::ctypes::c_int,
    pub data_0x10: crate::ctypes::c_int,
    pub data_0x14: crate::ctypes::c_int,
}
extern "C" {
    pub fn _sceFiosKernelOverlayResolveWithRangeSync(
        pid: SceUID,
        resolve_flag: crate::ctypes::c_int,
        in_path: *const crate::ctypes::c_char,
        args: *mut SceFiosResolveWithRangeSyncSyscallArgs,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _sceFiosKernelOverlayThreadIsDisabled() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _sceFiosKernelOverlayThreadSetDisabled(disabled: SceInt32) -> crate::ctypes::c_int;
}

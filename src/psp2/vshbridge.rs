/* automatically generated by rust-bindgen 0.68.1 */

#[allow(unused_imports)]
use crate::psp2::kernel::modulemgr::*;
#[allow(unused_imports)]
use crate::psp2::types::*;
use crate::psp2common::kernel::modulemgr::*;
#[allow(unused_imports)]
use crate::psp2common::kernel::msif::*;
#[allow(unused_imports)]
use crate::psp2common::types::*;

extern "C" {
    pub fn _vshSblGetSystemSwVersion(data: *mut SceKernelFwInfo) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _vshSblAimgrGetSMI(info: *mut SceUInt32) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _vshSblAimgrGetConsoleId(CID: *mut crate::ctypes::c_char) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _vshKernelSearchModuleByName(
        module_name: *const crate::ctypes::c_char,
        buffer: *const crate::ctypes::c_void,
    ) -> SceUID;
}
extern "C" {
    pub fn _vshIoMount(
        id: crate::ctypes::c_int,
        path: *const crate::ctypes::c_char,
        permission: crate::ctypes::c_int,
        buf: *mut crate::ctypes::c_void,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshIoUmount(
        id: crate::ctypes::c_int,
        force: crate::ctypes::c_int,
        unk2: crate::ctypes::c_int,
        unk3: crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshIdStorageIsDirty() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshIdStorageIsFormatted() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshIdStorageIsReadOnly() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshIdStorageReadLeaf(
        leafnum: SceSize,
        buf: *mut crate::ctypes::c_void,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshIdStorageWriteLeaf(
        leafnum: SceSize,
        buf: *const crate::ctypes::c_void,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _vshNpDrmEbootSigVerify(
        eboot_pbp_path: *const crate::ctypes::c_char,
        eboot_signature: *const crate::ctypes::c_char,
        eboot_signature_header: *mut *mut crate::ctypes::c_char,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _vshNpDrmPspEbootVerify(
        eboot_pbp_path: *const crate::ctypes::c_char,
        eboot_signature: *const crate::ctypes::c_char,
        eboot_signature_header: *mut *mut crate::ctypes::c_char,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _vshNpDrmPspEbootSigGen(
        eboot_pbp_path: *const crate::ctypes::c_char,
        eboot_sha256: *const crate::ctypes::c_void,
        eboot_signature: *mut crate::ctypes::c_void,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _vshNpDrmEbootSigConvert(
        eboot_pbp_path: *const crate::ctypes::c_char,
        old_eboot_signature: *const crate::ctypes::c_void,
        new_eboot_signature: *mut crate::ctypes::c_void,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _vshNpDrmEbootSigGenPsp(
        eboot_pbp_path: *const crate::ctypes::c_char,
        eboot_sha256: *const crate::ctypes::c_void,
        eboot_signature: *mut crate::ctypes::c_void,
        sw_version: *mut crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _vshNpDrmEbootSigGenPs1(
        eboot_pbp_path: *const crate::ctypes::c_char,
        eboot_sha256: *const crate::ctypes::c_void,
        eboot_signature: *mut crate::ctypes::c_void,
        sw_version: *mut crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn _vshNpDrmEbootSigGenMultiDisc(
        eboot_pbp_path: *const crate::ctypes::c_char,
        sce_discinfo: *const crate::ctypes::c_void,
        eboot_signature: *mut crate::ctypes::c_void,
        sw_version: *mut crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshSblAimgrIsCEX() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshSblAimgrIsDEX() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshSblAimgrIsVITA() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshSblAimgrIsGenuineVITA() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshSblAimgrIsDolce() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshSblAimgrIsGenuineDolce() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshSblAimgrIsTest() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshSblAimgrIsTool() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshSblSsIsDevelopmentMode() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshSysconHasWWAN() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshSysconIsDownLoaderMode() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshSysconIsIduMode() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshSysconIsMCEmuCapable() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshSysconIsShowMode() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshSysconIduModeSet() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshSysconIduModeClear() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshSysconShowModeSet() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshSysconShowModeClear() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshMemoryCardGetCardInsertState() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshRemovableMemoryGetCardInsertState() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn vshMsifGetMsInfo(info: *mut SceMsInfo) -> crate::ctypes::c_int;
}
